#!/usr/bin/ruby
require 'net/http'
require 'net/https'
require 'nokogiri'
require 'instapush'
require 'optparse'

def get_availability_ssl(crn, term, push)
  http = Net::HTTP.new("selfservice.mypurdue.purdue.edu", 443)
  http.use_ssl = true
  resp, result = http.get("/prod/bwckschd.p_disp_detail_sched?term_in=#{term}&crn_in=#{crn}")
  page = Nokogiri::HTML.parse(resp.body)
  course = page.css("table.datadisplaytable")[0].css("th")[0].content
  data_table = page.css("table.datadisplaytable")[1]
  row = data_table.css("tr")[1]
  seats = row.css("td")[2].content.to_i
  if seats > 0
    if push then pushes course, seats end
    puts "There are #{seats} open seats in #{course}!"
  end
end

def pushes(course, seats)
    # Edit the following line for instapush.im support
    app = Instapush::Application.new '55a00ef2a4c48aa47faa9ba8', '980e167ada972e3d85f7e046d3219cd0'
    event = Instapush::Event.new 'open-seats'
    event.tracker = { :course => course, :seats => seats }
    app.push event
end

options = OpenStruct.new
options.crn = nil
options.push = false
options.term = nil
OptionParser.new do |opts|
   opts.separator ""
   opts.separator "Lookup the given Purdue WL class by CRN and term and check if any seats are available."
   opts.separator ""
   opts.on('-c', '--crn NUMBER', /[0-9]+/, 'Specify CRN.') { |c| options.crn = c }
   opts.on('-t', '--term TERM', /[0-9]+/, 'Specify school term. For example, fall of the 2015-2016 school',
                                          'year is 201610. Spring would be 201620, and summer 201630.') { |t| options.term = t }
   opts.on('-p', '--[no-]push', 'Send push notification to device. The default is not to push.') { |p| options.push = p }
   opts.on_tail('-h', '--help', 'Print this help message and exit.') { puts opts; exit }
   begin
      opts.parse!
      if (!options.crn || !options.term)
         $stderr.puts opts
         exit 1
      end
   rescue OptionParser::ParseError => error
      $stderr.puts error
      $stderr.puts "(Try -h)"
      exit 1
   end
end

get_availability_ssl(options.crn, options.term, options.push)
